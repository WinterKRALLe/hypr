(defwindow powermenu0
  :monitor 0
  :stacking "bg"
  :windowtype "normal"
  :wm-ignore true
  :geometry (geometry :width "100%" :height "100%")
  (powermenu_layout))

(defwindow powermenu1
  :monitor 1
  :stacking "bg"
  :windowtype "normal"
  :wm-ignore true
  :geometry (geometry :width "100%" :height "100%")
  (powermenu_layout))



(defpoll time :interval "5s"
  :initial `date +'{"hour":"%H","min":"%M"}'`
`date +'{"hour":"%H","min":"%M"}'`)

(defpoll net :interval "60s"
  :initial `N/A`
  `nmcli -t -f SIGNAL,ACTIVE device wifi \
  | awk -F':' '{if($2=="yes")print$1}'`)

;; Battery vars
(defpoll BATICON :interval "1m" `scripts/battery --icon`)
(defpoll BATPERC :interval "1m" `scripts/battery --perc`)

(defwidget powermenu_layout []
  (box :class "layout-box" :orientation "vertical"
    
    (box :valign "start" :space-evenly false :spacing 25
      (battery-ww :status {EWW_BATTERY.BAT1.status} :capacity {EWW_BATTERY.BAT1.capacity})
      (_network :strength net :offline "󰣽" :excellent "󰣺" :good "󰣸" :okay "󰣶" :slow "󰣴")
      (label :text "|" :class "sep")
      (_sundial)
    )
    
    (box :space-evenly false :hexpand true :vexpand true
      (box :spacing 15 :class "tm-box" :space-evenly false
        :valign "end" :halign "start"
        (label :text "󰸘")
        (label :text "${time.hour} : ${time.min}"))
      (_buttons :shutdown "shutdown now" :reboot "reboot"
        :logout "betterlockscreen --suspend"
        :shutdown_icon "󰐥" :reboot_icon "󰑙"
      :logout_icon "󰤄"))))





(defwidget _battery [battery status full high medium
  low empty charge]
  (box :class "bat-box" :space-evenly false :spacing 8
    (label :text {status == 'Charging' ? charge :
      battery < 15 ? empty :
      battery < 30 ? low :
      battery < 45 ? medium :
      battery < 75 ? high :
    battery < 95 ? full : full})))

(defwidget _network [strength offline excellent
  good okay slow]
  (box :class "net-box"
    :space-evenly false
    :spacing 8
    (label :text {strength == "" ? offline :
      strength < 26 ? slow :
      strength < 51 ? okay :
    strength < 76 ? good : excellent})))

(defwidget _buttons [shutdown shutdown_icon reboot
  reboot_icon logout logout_icon]
  (box :class "btns-box" :spacing 45
    :vexpand false :hexpand true
    :valign "end" :halign "end"
    
    (button :onclick shutdown shutdown_icon)
    (button :onclick reboot reboot_icon)
    (button :onclick logout logout_icon)))

; (defwidget battery-ww[]
  ;   (box :spacing 10 :hexpand true :halign "end"
    ;     (image :class "battery-icon" :path "icons/battery-Charging.svg")
    ;     (label :class "battery-label" :text "${EWW_BATTERY.BAT1.capacity}%")
  ;   )
; )



(defwidget battery-ww[status capacity]
  (box :spacing 10 :hexpand true :halign "end"
    (image :class "battery-icon"
      :path {status == "Charging" ? "icons/battery-Charging.svg" :
      capacity < 10 ? "icons/battery-empty.svg" :
      capacity < 35 ? "icons/battery-low.svg" :
      capacity < 60 ? "icons/battery-medium.svg" :
      capacity < 94 ? "icons/battery-high.svg" :
      "icons/battery-full.svg"
    })
    (label :class "battery-label" :text "${EWW_BATTERY.BAT1.capacity}%")
  )
)


(defwidget _sundial []
  (label :class "sundial-lbl"
    :text {time.hour >= 2 && time.hour <= 4 ? "Early Morning" :
    time.hour <= 5 ? "Dawn" :
    time.hour >= 6
    && (time.hour <= 8 && time.min <= 59)
    ? "Morning" :
    time.hour >= 9
    && (time.hour <= 11 && time.min <= 59)
    ? "Late Morning" :
    time.hour == 12 && time.min <= 29
    ? "Midday" :
    time.hour >= 12 && time.hour <= 16
    ? "Afternoon" :
    time.hour > 16 && time.hour <= 17
    ? "Late Afternoon" :
    (time.hour >= 17 && time.min <= 1)
    || (time.hour <= 18 && time.min <= 20)
    ? "Early Evening" :
    time.hour >= 18 && time.hour <= 19
    ? "Dusk" :
    time.hour > 19 && time.hour <= 21
    ? "Late Evening" :
  time.hour > 21 ? "Night" : "Midnight"}))

;; vim:ft=yuck





